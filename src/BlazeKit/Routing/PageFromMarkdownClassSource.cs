using BlazeKit.Abstraction;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace BlazeKit.Routing
{
    public sealed class PageFromMarkdownClassSource : Lazy<string>
    {
        public PageFromMarkdownClassSource(string classNameSpace, string className, string route, string layout, string markdownAsHtml) : base(() =>
        {
            var text = new StringBuilder();
            text.AppendLine($"// Auto-generated by BlazeKit");
            text.AppendLine("using Microsoft.AspNetCore.Components;");
            text.AppendLine("using BlazeKit.Abstraction;");
            text.AppendLine("using Microsoft.AspNetCore.Components.Rendering;");
            text.AppendLine($"namespace {classNameSpace};");
            text.AppendLine($"[Route(\"{(route == "" ? "/" : route)}\")]");

            if (!string.IsNullOrEmpty(layout))
            {
                text.AppendLine($"[Layout(typeof({layout}))]");
            }

            text.AppendLine($"public partial class {className} : ComponentBase {{");
            text.AppendLine($"private string content = @\"{markdownAsHtml}\";");
            text.AppendLine(@"
            protected override void BuildRenderTree(RenderTreeBuilder builder)
            {
                builder.AddMarkupContent(0, content);
            }
            ");
            //text.AppendLine("\tpublic void Update() => InvokeAsync(StateHasChanged);");
            text.AppendLine("}");


            return text.ToString();
        })
        {
            
        }
    }
}
