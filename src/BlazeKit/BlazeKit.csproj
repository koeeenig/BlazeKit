<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <!-- ðŸ‘‡ We don't want to reference the source generator dll directly in consuming projects -->
    <IncludeBuildOutput>false</IncludeBuildOutput>
    <PackageTags>Blazor, File-based Routing</PackageTags>
    <NoWarn>RS1036;NU5128</NoWarn>
  </PropertyGroup>


  <ItemGroup>
    <PackageReference Include="Microsoft.CodeAnalysis.Common" Version="4.7.0" />
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="4.7.0" />
    <!--<PackageReference Include="Markdig" Version="0.33.0" PrivateAssets="all" GeneratePathProperty="true"/>
    <None Include="$(PkgMarkdig)\lib\netstandard2.0\*.dll"
            Pack="true"
            PackagePath="analyzers/dotnet/cs"
            Visible="false" />-->
  </ItemGroup>

  <ItemGroup>
    <Content Include="build/*" PackagePath="build"></Content>
    <None Include="../../README.md" Pack="true" PackagePath="\"></None>
    <None Include="../../LICENSE:txt" Pack="true" PackagePath="\"></None>
    <Content Include="icon.png" PackagePath="."></Content>
  </ItemGroup>

  <!-- This ensures the library will be packaged as a source generator when we use `dotnet pack` -->
  <ItemGroup>
    <None Include="$(OutputPath)\$(AssemblyName).dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="..\BlazeKit.Abstraction\**\*.cs" Exclude="..\BlazeKit.Abstraction\obj\**\*.cs;">
      <Link>BlazeKit.Abstraction\%(RecursiveDir)/%(FileName)%(Extension)</Link>
    </Compile>
  </ItemGroup>

</Project>
