@inherits BlazeKit.Web.Components.IslandComponent
@code {
    [Inject]
    public Tools.IDevTools DevToolsData { get; set; } = default!;

    private string view = "pages";


    public DevTools()
    {
        Client = Web.Components.ClientHydrateMode.None;
    }

    protected override async void OnMount() {

        if(!OperatingSystem.IsBrowser()) {
            @* Routes.Clear(); *@
            @* Routes = FindRoutes(); *@
            @* Components = FindComponentsUsed(); *@
            @* await InvokeAsync(StateHasChanged); *@
        }

    }

    private void SetView(string view) {
        this.view = view;
        @* InvokeAsync(StateHasChanged); *@
    }
}
<style>
    /* define a css variable devtools-width */
    :root {
        --devtools-width: 80;
    }
    .devtools {
        position: fixed;
        left: 50%;
        bottom: 0;
    }

    .devtools-button {

        width: var(--devtools-width)px !important;
        left: calc(var(--devtools-width) * 0.5px * -1);
        position: relative;
        height: var(--devtools-width)px !important;
        padding: 5px;
        display: flex;
        justify-content: center;
        align-items: center;
        & img {
            width: calc(var(--devtools-width) * 0.5px);
            filter: invert(1);
        }
    }



</style>
<div data-permanent class="devtools">
<script>
    function toggleDevTools() {
        const dialog = document.getElementById("devtools");
        if(!dialog.open) {
            dialog.showModal();
        } else {
            dialog.close();
        }
    }

</script>
<!-- Button to trigger the modal -->
<button
  data-target="devtools"
  class="devtools-button btn btn-primary"
  onClick="toggleDevTools()">
  <img src="./images/blazekit-logo.svg" alt="BlazeKit Logo" />
  <span>üõ†Ô∏è</span>
</button>

<!-- Modal -->
<dialog id="devtools">
  <article>
    <a href="#close"
      aria-label="Close"
      class="close"
      data-target="modal-example"
      onClick="toggleModal(event)">
    </a>
    <h3>BlazeKit DevTools</h3>
    <p>
      Use the DevTools to inspect the components and routes in your application.
    </p>
    <article>
    <details>
        <summary role="button">Routes</summary>
        <ul>
            @foreach (var route in DevToolsData.Routes())
            {
                <li><a href="@(route)">@route</a></li>
            }
        </ul>
    </details>
    <details>
        <summary role="button">Components</summary>
        <ul>
            @foreach (var component in DevToolsData.Components())
            {
                <li>@component</li>
            }
        </ul>
    </details>
    </article>
    <footer>
      <button
        @* role="button" *@
        data-target="devtools"
        onClick="toggleDevTools()">
        Close
      </button>
    </footer>
  </article>
</dialog>
</div>
