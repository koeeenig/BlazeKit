@code {
    [Parameter]
    [EditorRequired]
    public RenderFragment ChildContent { get; set; }

    [Parameter]
    [EditorRequired]
    public Type ComponentType { get; set; }

    [Parameter]
    public BlazeKit.Islands.ClientLoadMode Client { get; set; } = BlazeKit.Islands.ClientLoadMode.Idle;

    private MarkupString beginBlazorWasmMarker;
    private MarkupString endBlazorWasmMarker;
    private IList<KeyValuePair<string,object>> load = new List<KeyValuePair<string, object>>();

    private string prerenderId = Guid.NewGuid().ToString();
    private string locationhash = Guid.NewGuid().ToString();
    protected override void OnParametersSet() {
        // var typeName = ComponentType.FullName;
        var prefix = "BlazeKit.Website.Islands";
        var typeName = ComponentType.FullName.Replace(prefix,prefix.Replace("Islands","Client"));
        var assemblyName = $"{ComponentType.Assembly.GetName().Name}.Islands";
        beginBlazorWasmMarker = new MarkupString(@$"<!--Blazor:{{""type"":""webassembly"",""prerenderId"":""{prerenderId}"",""key"":{{""locationHash"":""{locationhash}"",""formattedComponentKey"":""""}},""assembly"":""{assemblyName}"",""typeName"":""{typeName}"",""parameterDefinitions"":""W10="",""parameterValues"":""W10=""}}-->");
        endBlazorWasmMarker = new MarkupString(@$"<!--Blazor:{{""prerenderId"":""{prerenderId}""}}-->");
    }
}
@if(ChildContent != null)
{
    @if(Client != None) {
        @(new MarkupString(@$"<div client={Client.ToString().ToLower()} blazekit-id=""{prerenderId}"">"));
        @beginBlazorWasmMarker
            @ChildContent
        @endBlazorWasmMarker
        @(new MarkupString($"</div>"));
    } else {
        @ChildContent
    }
}
