@using BlazeKit.Reactive;
@using BlazeKit.Reactive.Signals;
@using System.ComponentModel;
@using Yaapii.Atoms.IO;
@using Yaapii.Atoms.Text;

<h1>Welcome to BlazeKit! <span class="wave">👋</span></h1>
<p><strong>BlazeKit</strong> aims to provide Meta-framework-like Features for Blazor which has been inspired by <a href="https://kit.svelte.dev/" target="_blank">SvelteKit</a>. BlazeKit currently supports the following features:</p>
<ul>
    <li>⚡ Reactive primitives inspired by the signals pattern.</li>
    <li>🪧 File-based Routing</li>
    <li>🖼️ File-based Layouts</li>
    <li>🪄 Auto-Generated Route Parameters</li>
</ul>
<blockquote class="callout">
<div>💡</div>
    <div>BlazeKit is unopinionated about the Blazor Hosting Model. BlazeKit works with either <strong>Blazor Server</strong>,<strong>Blazor WebAssembly</strong> or the new <strong>Blazor Server-Side Rendering</strong> Model.</div>
</blockquote>

<p>Want to get started with BlazeKit? Head over to <a href="/create-a-project">Getting Started</a> to create your first Blazekit app.</p>


@* But Why section *@
<Markdown Text="@(new TextOf(new ResourceOf("Assets/but-why.md", this.GetType())).AsString())" />

<p>This is a short list with potential features</p>
<ul>
<li>🚀 Automatic Deployments for</li>
<ul>
    <li>Vercel</li>
    <li>Azure Static Web Apps</li>
    <li>Netlify</li>
    <li>Cloudflare</li>
</ul>
<li>🌩️ Serverless Api Routes</li>
<li>👨‍🎨 Server-Side-Rendering (.NET 8)</li>
</ul>
<h2>Links to Examples</h2>
<ul>
    <li>
        <a href="/foo/details/1234?foo=bar  ">Try nested Layouts and Route Params</a>
    </li>
    <li>
        <a href="/reactivity">Reactivity</a>
    </li>
    <li>
        <a href="/foo">Initialized Signal</a>
    </li>
</ul>

<h2>🛠️ Todo's</h2>
<Markdown Text="@(new TextOf(new ResourceOf("Assets/todos.md", this.GetType())).AsString())" />

